<html>
  <head>
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-beta/css/bootstrap.min.css" integrity="sha384-/Y6pD6FV/Vv2HJnA6t+vslU6fwYXjCFtcEpHbNJ0lyAFsXTsjBbfaDjzALeQsN6M" crossorigin="anonymous">
    <script src='https://libs.na.bambora.com/customcheckout/1/customcheckout.js'></script>
    <style>
      .bambora-checkoutfield {
        margin-left: 5px;
        width: 97%;
        height: 2.5em;
        border-radius: 4px;
        border: 1px solid rgba(0,0,0,.15);
        line-height: 0;
        margin-bottom: 3px;
      }
      .bambora-checkoutfield-focus {
        border-color: #80bdff;
      }
      .bambora-checkoutfield-error {
        border-color: rgba(224, 80, 67, 1) !important;
      }
      .card-label {
        color: rgb(0, 0, 0) !important;
        font-size: 0.7rem;
        margin-left: 10;
        margin-bottom: 0;
      }
      .feedback-message {
        color: rgba(224, 80, 67, 1) !important;
        font-size: 0.7rem;
        margin-left: 10;
        margin-bottom: 1em;
      }
      #feedback {
        margin-top: 1em;
      }
    </style>
  </head>
  <body>
    <form id="checkout-form" height="40px">
      
      <div class="form-row">
        <label for="card-number" class="card-label">Card number</label>
        <div class="input" id="card-number"></div>
        <label for="card-number" class="feedback-message" id="card-number-feedback-message"></label>
      </div>
      
      <div class="form-row">
        <label for="cvv" class="card-label">Security code</label>
        <div class="input" id="card-cvv"></div>
        <label for="card-cvv" class="feedback-message" id="cvv-feedback-message"></label>
      </div>
      
      <div class="form-row">
        <label for="expiry" class="card-label">Expiry</label>
        <div class="input" id="card-expiry"></div>
        <label for="card-expiry" class="feedback-message" id="expiry-feedback-message"></label>
      </div>
      
      <div id="feedback"></div>
      
    </form>

    <script>
      function saveTokenAndChargeCard(token, donationAmount, metadata, source, recurring) {
        var url = '<%= "#{pay_url(@processor)}?key=#{@api_user.key}" %>';
        var data = JSON.stringify({
          token: token,
          metadata: metadata,
          source: source,
          amount: donationAmount,
          recurring: recurring
        });
        
        var request = new XMLHttpRequest();
        request.open('POST', url, true);
        request.setRequestHeader('Content-Type', 'application/json');

        request.onload = function() {
          if (request.status === 200) {
            data = {
              action: "donationProcessed",
              response: request.responseText
            };
            parent.postMessage(data, "*");
          } else {
            console.log(request);
          }
        };

        request.onerror = function() {
          console.log('error 2');
        }

        request.send(data);
      }
    
      (function() {
        var customCheckout = customcheckout();
        
        var isCardNumberComplete = false;
        var isCVVComplete = false;
        var isExpiryComplete = false;
        
        var customCheckoutController = {
          init: function() {
            this.createInputs();
            this.addListeners();
          },
          createInputs: function() {
            
            var options = {};
            
            options.style = {};
            
            options.style.base = {
              padding: '10px 12px',
              fontSize: '1rem',
              color: 'rgba(73, 80, 87, 1)',
            };

            options.placeholder = 'Card number';
            customCheckout.create('card-number', options).mount('#card-number');

            options.placeholder = 'CVV';
            customCheckout.create('cvv', options).mount('#card-cvv');

            options.placeholder = 'MM / YY';
            customCheckout.create('expiry', options).mount('#card-expiry');
            
          },
          
          addListeners: function() {
            
            var self = this;
            
            window.addEventListener("message", function(event) {
              var data = event.data;
              if (data.action === "submit") {
                self.onSubmit(data.donationAmount, data.metadata, data.source, data.recurring)
              }
            }, false);
            
            customCheckout.on('error', function(event) {
              document.getElementById(event.field + '-feedback-message')
                .innerHTML = event.message;
                
              if (event.field === 'card-number') {
                isCardNumberComplete = false;
              } else if (event.field === 'cvv') {
                isCVVComplete = false;
              } else if (event.field === 'expiry') {
                isExpiryComplete = false;
              }
            });
            
            customCheckout.on('complete', function(event) {
              if(document.getElementById(event.field + '-feedback-message')) {
                document.getElementById(event.field + '-feedback-message')
                  .innerHTML = '';
              }
              
              if (event.field === 'card-number') {
                isCardNumberComplete = true;
              } else if (event.field === 'cvv') {
                isCVVComplete = true;
              } else if (event.field === 'expiry') {
                isExpiryComplete = true;
              }
              
              self.setPayButton();
            });
            
          },
          onSubmit: function(donationAmount, metadata, source, recurring) {
            var self = this;
            
            self.toggleProcessingScreen();

            var callback = function(result) {

              if (result.error) {
                self.processTokenError(result.error);
              } else {
                self.processTokenSuccess(result.token);
                saveTokenAndChargeCard(result.token, donationAmount, metadata, source, recurring);
              }
            };

            customCheckout.createToken(callback);
          },
          setPayButton: function() {            
            if (isCardNumberComplete && isCVVComplete && isExpiryComplete) {
              var message = {
                disable: false
              }
              parent.postMessage(message, "*");
            }
          },
          toggleProcessingScreen: function() {
            var processingScreen = document.getElementById('processing-screen');
            if (processingScreen) {
              processingScreen.classList.toggle('visible');
            }
          },
          showErrorFeedback: function(message) {
            var xMark = '\u2718';
            this.feedback = document.getElementById('feedback');
            this.feedback.innerHTML = xMark + ' ' + message;
            this.feedback.classList.add('error');
          },
          showSuccessFeedback: function(message) {
            var checkMark = '\u2714';
            this.feedback = document.getElementById('feedback');
            this.feedback.innerHTML = checkMark + ' ' + message;
            this.feedback.classList.add('success');
          },
          processTokenError: function(error) {
            error = JSON.stringify(error, undefined, 2);

            this.showErrorFeedback(
              'Error creating token: </br>' + JSON.stringify(error, null, 4)
            );
            this.toggleProcessingScreen();
          },
          processTokenSuccess: function(token) {
            
            this.showSuccessFeedback('Success! Please wait while we process your donation.');
            this.toggleProcessingScreen();

          },
        };

        customCheckoutController.init();
      })();
      
    </script>
  </body>
</html>
